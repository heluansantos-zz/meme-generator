{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hcls/Hevolsoft/meme-generator/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Head from 'next/head';\nimport { Container, Title, Description, Input, Label, DivInput, Canvas } from '../styles/pages/Home';\nimport { Context } from '../context/Context';\n\nvar Home = function Home() {\n  _s();\n\n  var _useContext = useContext(Context),\n      canvasRef = _useContext.canvasRef,\n      lowerText = _useContext.lowerText,\n      setLowerText = _useContext.setLowerText,\n      setUpperText = _useContext.setUpperText,\n      upperText = _useContext.upperText;\n\n  var _useDropzone = useDropzone({}),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var _useState = useState({\n    title: 'Meme Generator',\n    description: 'Meme Generator or editing.'\n  }),\n      name = _useState[0];\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Meme Generator\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, name.title), __jsx(Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, name.description), __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", _extends({}, getRootProps, {\n    ref: canvasRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(Canvas, {\n    ref: canvasRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \" \"), __jsx(\"input\", _extends({}, getInputProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))), __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(DivInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    htmlFor: \"upperText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Title\"), __jsx(Input, {\n    value: upperText,\n    onChange: function onChange(e) {\n      return setUpperText(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), __jsx(DivInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    htmlFor: \"lowerText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Description\"), __jsx(Input, {\n    value: lowerText,\n    onChange: function onChange(e) {\n      return setLowerText(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Home, \"qc+L+ryUlbVbuNe5ayjCKfkL+4Q=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/hcls/Hevolsoft/meme-generator/src/pages/index.tsx"],"names":["React","useContext","useState","useDropzone","Head","Container","Title","Description","Input","Label","DivInput","Canvas","Context","Home","canvasRef","lowerText","setLowerText","setUpperText","upperText","getRootProps","getInputProps","title","description","name","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport Head from 'next/head'\n\nimport {\n  Container,\n  Title,\n  Description,\n  Input,\n  Label,\n  DivInput,\n  Canvas\n} from '../styles/pages/Home'\nimport { Context } from '../context/Context'\n\nconst Home: React.FC = () => {\n  const {\n    canvasRef,\n    lowerText,\n    setLowerText,\n    setUpperText,\n    upperText\n  } = useContext(Context)\n  const { getRootProps, getInputProps } = useDropzone({})\n  const [name] = useState({\n    title: 'Meme Generator',\n    description: 'Meme Generator or editing.'\n  })\n  return (\n    <Container>\n      <Head>\n        <title>Meme Generator</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <Title>{name.title}</Title>\n      <Description>{name.description}</Description>\n\n      <main>\n        <div>\n\n        </div>\n\n        <div\n          {...getRootProps}\n          ref={canvasRef}\n\n        >\n          <Canvas\n            ref={canvasRef}\n          > </Canvas>\n          <input {...getInputProps} />\n\n        </div>\n        <form>\n          <DivInput>\n            <Label htmlFor=\"upperText\">Title</Label>\n            <Input\n              value={upperText}\n              onChange={(e) => setUpperText(e.target.value)}\n            />\n          </DivInput>\n          <DivInput>\n            <Label htmlFor=\"lowerText\">Description</Label>\n            <Input\n              value={lowerText}\n              onChange={(e) => setLowerText(e.target.value)}\n            />\n          </DivInput>\n        </form>\n      </main>\n\n    </Container>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}