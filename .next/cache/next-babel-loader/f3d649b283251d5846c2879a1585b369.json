{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/hcls/Hevolsoft/meme-generator/src/context/Context.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useEffect, useState } from 'react';\nexport var Context = createContext({});\n\nvar ContextProvider = function ContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      darkTheme = _useState[0];\n\n  useEffect(function () {\n    console.log('');\n  }, []);\n\n  var updateTheme = function updateTheme(index) {\n    console.log(darkTheme);\n  };\n\n  return __jsx(Context.Provider, {\n    value: {\n      darkTheme: darkTheme,\n      updateTheme: updateTheme\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(ContextProvider, \"aNJ30x0RZ45KzvSi7oRMJ2Nrb7E=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/hcls/Hevolsoft/meme-generator/src/context/Context.tsx"],"names":["React","createContext","useEffect","useState","Context","ContextProvider","children","darkTheme","console","log","updateTheme","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,OAAO,IAAMC,OAAO,GAAGH,aAAa,CAAC,EAAD,CAA7B;;AAEP,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,OAAwC;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC1CH,QAAQ,CAAC,KAAD,CADkC;AAAA,MACvDI,SADuD;;AAG9DL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAmB;AACrCH,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACD,GAFD;;AAIA,SACE,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAATA,SAAF;AAAaG,MAAAA,WAAW,EAAXA;AAAb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAfD;;GAAMD,e;;KAAAA,e;AAiBN,eAAeA,eAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { ContextData, ContextProviderProps } from './interfaces'\nexport const Context = createContext({} as ContextData)\n\nconst ContextProvider = ({ children }: ContextProviderProps) => {\n  const [darkTheme] = useState(false)\n\n  useEffect(() => {\n    console.log('')\n  }, [])\n  const updateTheme = (index: number) => {\n    console.log(darkTheme)\n  }\n\n  return (\n    <Context.Provider value={{ darkTheme, updateTheme }}>\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport default ContextProvider\n"]},"metadata":{},"sourceType":"module"}