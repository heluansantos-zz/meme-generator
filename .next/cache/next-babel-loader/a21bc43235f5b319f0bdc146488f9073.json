{"ast":null,"code":"var _jsxFileName = \"/Users/hcls/Hevolsoft/meme-generator/src/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Head from 'next/head';\nimport { Container, Title, Description } from '../styles/pages/Home';\nimport { Context } from '../context/Context';\n\nconst Home = () => {\n  const {\n    canvasRef,\n    lowerText,\n    setLowerText,\n    setUpperText,\n    upperText\n  } = useContext(Context);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({});\n  const {\n    0: name\n  } = useState({\n    title: 'Meme Generator',\n    description: 'Meme Generator or editing.'\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Meme Generator\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, name.title), __jsx(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, name.description), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"canvas\", _extends({}, getRootProps, {\n    ref: canvasRef,\n    onClick: () => {\n      alert(canvasRef.current);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"upperText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Texto superior\"), __jsx(\"input\", {\n    id: \"upperText\",\n    name: \"upperText\",\n    value: upperText,\n    onChange: e => setUpperText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"lowerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Texto superior\"), __jsx(\"input\", {\n    id: \"lowerText\",\n    name: \"lowerText\",\n    value: lowerText,\n    onChange: e => setLowerText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hcls/Hevolsoft/meme-generator/src/pages/index.tsx"],"names":["React","useContext","useState","useDropzone","Head","Container","Title","Description","Context","Home","canvasRef","lowerText","setLowerText","setUpperText","upperText","getRootProps","getInputProps","name","title","description","alert","current","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,WAA3B,QAA8C,sBAA9C;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFb,UAAU,CAACO,OAAD,CANd;AAOA,QAAM;AAACO,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCb,WAAW,CAAC,EAAD,CAAjD;AACA,QAAM;AAAA,OAACc;AAAD,MAASf,QAAQ,CAAC;AACtBgB,IAAAA,KAAK,EAAE,gBADe;AAEtBC,IAAAA,WAAW,EAAE;AAFS,GAAD,CAAvB;AAIA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,IAAI,CAACC,KAAb,CALF,EAME,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,IAAI,CAACE,WAAnB,CANF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAYJ,YAAZ;AAA0B,IAAA,GAAG,EAAEL,SAA/B;AAA0C,IAAA,OAAO,EAAE,MAAM;AACvDU,MAAAA,KAAK,CAACV,SAAS,CAACW,OAAX,CAAL;AAED,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAII,4BAAWL,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAEF,SAHT;AAIE,IAAA,QAAQ,EAAGQ,CAAD,IAAOT,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAEb,SAHT;AAIE,IAAA,QAAQ,EAAGW,CAAD,IAAOV,YAAY,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CAPF,CARF,CADF;AAwCD,CArDD;;AAuDA,eAAef,IAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport Head from 'next/head'\n\nimport { Container, Title, Description } from '../styles/pages/Home'\nimport { Context } from '../context/Context'\n\nconst Home: React.FC = () => {\n  const { \n    canvasRef, \n    lowerText, \n    setLowerText, \n    setUpperText, \n    upperText \n  } = useContext(Context)\n  const {getRootProps, getInputProps} = useDropzone({})\n  const [name] = useState({\n    title: 'Meme Generator',\n    description: 'Meme Generator or editing.'\n  })\n  return (\n    <Container>\n      <Head>\n        <title>Meme Generator</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <Title>{name.title}</Title>\n      <Description>{name.description}</Description>\n  \n      <main>\n        <canvas {...getRootProps} ref={canvasRef} onClick={() => {\n          alert(canvasRef.current);\n          \n        }}>\n            <input {...getInputProps} />\n        </canvas>\n        <form>\n          <div>\n            <label htmlFor=\"upperText\">Texto superior</label>\n            <input \n              id=\"upperText\"\n              name=\"upperText\"\n              value={upperText}\n              onChange={(e) => setUpperText(e.target.value)}\n            />\n          </div>\n          <div>\n          <label htmlFor=\"lowerText\">Texto superior</label>\n            <input \n              id=\"lowerText\"\n              name=\"lowerText\"\n              value={lowerText}\n              onChange={(e) => setLowerText(e.target.value)}\n            />\n          </div>\n        </form>\n      </main>\n    \n    </Container>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}